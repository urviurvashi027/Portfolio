{"version":3,"sources":["ng://ngx-ckeditor/lib/ck-editor.component.ts","ng://ngx-ckeditor/lib/ck-editor.module.ts"],"names":["defaults","contentsCss","customConfig","CKEditorComponent","ngZone","hostEl","this","innerValue","disabled","editorInitialized","readonly","config","skin","language","fullPage","inline","change","EventEmitter","ready","blur","focus","onChange","value","onTouched","identifier","getRandomIdentifier","id","String","idx","Object","defineProperty","prototype","ckIns","ngOnInit","ngOnChanges","changes","destroyEditor","initEditor","ngAfterViewChecked","documentContains","textareaRef","nativeElement","ngOnDestroy","_this","CKEDITOR","console","warn","textareaEl","setAttribute","opt","assign","readOnly","replace","setData","on","val","getData","updateValue","evt","run","emit","instances","hasOwnProperty","name","remove","editorEl","querySelector","parentElement","removeChild","node","document","contains","body","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","exportAs","NgZone","ElementRef","Input","Output","ViewChild","CKEditorModule","NgModule","imports","exports","FormsModule","declarations"],"mappings":"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","sourcesContent":["import {\r\n  AfterViewInit,\r\n  AfterViewChecked,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  forwardRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\ndeclare var CKEDITOR: any;\r\n\r\nconst defaults = {\r\n  contentsCss: [''],\r\n  customConfig: ''\r\n};\r\n\r\n@Component({\r\n  selector: 'ck-editor',\r\n  template: `\r\n    <textarea #textarea></textarea>\r\n  `,\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CKEditorComponent), multi: true }],\r\n  exportAs: 'ckEditor'\r\n})\r\nexport class CKEditorComponent implements OnInit, OnDestroy, OnChanges, AfterViewChecked, ControlValueAccessor {\r\n  private ckIns: any;\r\n  private innerValue = '';\r\n  private identifier: string;\r\n  private disabled = false;\r\n  private editorInitialized = false;\r\n\r\n  /**\r\n   * Is readonly mode, default:false\r\n   */\r\n  @Input() public readonly = false;\r\n  /**\r\n   * The ck-editor config object.\r\n   */\r\n  @Input() public config: any = {};\r\n  /**\r\n   * The special skin, default: moono-lisa\r\n   */\r\n  @Input() public skin = 'moono-lisa';\r\n  /**\r\n   * The special language, default: en\r\n   */\r\n  @Input() public language = 'en';\r\n  /**\r\n   * Use fullpage mode, default:false\r\n   */\r\n  @Input() public fullPage = false;\r\n  /**\r\n   * Use inline mode, default: false\r\n   */\r\n  @Input() public inline = false;\r\n  /**\r\n   * The editor id\r\n   */\r\n  @Input() public id: string;\r\n\r\n  @Output() public change = new EventEmitter();\r\n  @Output() public ready = new EventEmitter();\r\n  @Output() public blur = new EventEmitter();\r\n  @Output() public focus = new EventEmitter();\r\n\r\n  @ViewChild('textarea') public textareaRef: ElementRef;\r\n\r\n  private static idx = 1;\r\n  private static getRandomIdentifier(id: string = '') {\r\n    return 'editor-' + (id !== '' ? id : String(CKEditorComponent.idx++));\r\n  }\r\n\r\n  onChange = (value: string) => {};\r\n  onTouched = () => {};\r\n\r\n  public get instance() {\r\n    return this.ckIns;\r\n  }\r\n\r\n  constructor(private ngZone: NgZone, private hostEl: ElementRef) {\r\n    this.identifier = CKEditorComponent.getRandomIdentifier(this.id);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.editorInitialized) {\r\n      this.destroyEditor();\r\n      this.initEditor(this.identifier);\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (!this.editorInitialized && this.documentContains(this.textareaRef.nativeElement)) {\r\n      this.editorInitialized = true;\r\n      this.initEditor(this.identifier);\r\n    } else if (this.editorInitialized && !this.documentContains(this.textareaRef.nativeElement)) {\r\n      this.editorInitialized = false;\r\n      this.destroyEditor();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyEditor();\r\n  }\r\n\r\n  private initEditor(identifier: string) {\r\n    if (typeof CKEDITOR === 'undefined') {\r\n      return console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');\r\n    }\r\n    const textareaEl = this.textareaRef.nativeElement;\r\n    this.identifier = identifier;\r\n    textareaEl.setAttribute('name', this.identifier);\r\n    if (this.ckIns || !this.documentContains(this.textareaRef.nativeElement)) {\r\n      return;\r\n    }\r\n\r\n    const opt = Object.assign({}, defaults, this.config, {\r\n      readOnly: this.readonly,\r\n      skin: this.skin,\r\n      language: this.language,\r\n      fullPage: this.fullPage,\r\n      inline: this.inline\r\n    });\r\n\r\n    this.ckIns = this.inline ? CKEDITOR.inline(textareaEl, opt) : CKEDITOR.replace(textareaEl, opt);\r\n    this.ckIns.setData(this.innerValue);\r\n\r\n    this.ckIns.on('change', () => {\r\n      const val = this.ckIns.getData();\r\n      this.updateValue(val);\r\n    });\r\n\r\n    this.ckIns.on('instanceReady', (evt: any) => {\r\n      this.ngZone.run(() => {\r\n        this.ready.emit(evt);\r\n      });\r\n    });\r\n\r\n    this.ckIns.on('blur', (evt: any) => {\r\n      this.ngZone.run(() => {\r\n        this.blur.emit(evt);\r\n        this.onTouched();\r\n      });\r\n    });\r\n\r\n    this.ckIns.on('focus', (evt: any) => {\r\n      this.ngZone.run(() => {\r\n        this.focus.emit(evt);\r\n      });\r\n    });\r\n  }\r\n\r\n  private destroyEditor() {\r\n    if (this.ckIns) {\r\n      // If use destroy, will fire 'Error code: editor-destroy-iframe'\r\n      // this.ckIns.destroy();\r\n      if (CKEDITOR.instances.hasOwnProperty(this.ckIns.name)) {\r\n        CKEDITOR.remove(CKEDITOR.instances[this.ckIns.name]);\r\n      }\r\n      this.ckIns = null;\r\n      const editorEl = this.hostEl.nativeElement.querySelector('#cke_' + this.identifier);\r\n      if (editorEl != null && editorEl.parentElement) {\r\n        editorEl.parentElement.removeChild(editorEl);\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateValue(value: string) {\r\n    this.ngZone.run(() => {\r\n      this.innerValue = value;\r\n      this.onChange(value);\r\n      this.onTouched();\r\n      this.change.emit(value);\r\n    });\r\n  }\r\n\r\n  private documentContains(node: Node) {\r\n    return document.contains ? document.contains(node) : document.body.contains(node);\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.innerValue = value || '';\r\n    if (this.ckIns) {\r\n      // Fix bug that can't emit change event when set non-html tag value twice in fullpage mode.\r\n      this.ckIns.setData(this.innerValue);\r\n      const val = this.ckIns.getData();\r\n      this.ckIns.setData(val);\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: string) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CKEditorComponent } from './ck-editor.component';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [FormsModule, CKEditorComponent],\r\n  declarations: [CKEditorComponent],\r\n  providers: []\r\n})\r\nexport class CKEditorModule {}\r\n"]}